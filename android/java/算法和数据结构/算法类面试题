1、常用数据结构简介

    数组：顺序存储，随机访问
    链表：随机存储，顺序访问， 
        链表又分为单链表、双向链表、循环链表、双端链表（为了优化想在尾部添加一个节点而导致的需要从链表头部开始遍历的繁琐性，在设计链表的时候增加对尾节点的引用）
    栈：先进后出
    队列：先进先出
    树：增删改查快
        二叉树、平衡二叉树、红黑树

2、并发集合类

    Java提供两种在并发应用程序中使用的集合：
    阻塞集合：这种集合包括添加和删除数据的操作。如果操作不能立即进行，是因为集合已满或者为空，该程序将被阻塞，直到操作可以进行。
    非阻塞集合：这种集合也包括添加和删除数据的操作。如果操作不能立即进行，这个操作将返回null值或抛出异常，但该线程将不会阻塞。

    一些常用的并发类集合包括：
    ConcurrentHashMap（把整个Map 划分成几个片段，只对相关的几个片段上锁，同时允许多线程访问其他未上锁的片段。）
    - 非阻塞列表，使用ConcurrentLinkedDeque类。
    - 阻塞列表，使用LinkedBlockingDeque类。
    - 用在生产者与消费者数据的阻塞列表，使用LinkedTransferQueue类。
    - 使用优先级排序元素的阻塞列表，使用PriorityBlockingQueue类。
    - 存储延迟元素的阻塞列表，使用DelayQueue类。
    - 非阻塞可导航的map，使用ConcurrentSkipListMap类。
    - 随机数，使用ThreadLocalRandom类
    - 原子变量，使用AtomicLong和AtomicIntegerArray类 

3、同步集合类

    HashTable、Vector
    同步集合包装类Collections.synchronizedMap()和Collections.synchronizedList() 

4、浅拷贝和深拷贝

    值类型字段(java中8中原始类型)的值被复制到副本中后，在副本中的修改不会影响到源对象对应的值。而引用类型的字段被复制到副本中的还是引用类型的引用，而不是引用的对象，在副本中对引用类型的字段值做修改会影响到源对象本身。
    浅拷贝简单归纳就是只复制一个对象，对象内部存在指向其他对象，数组或引用则不复制。

    将对象中的所有字段复制到新的对象中。不过，无论是对象的值类型字段，还是引用类型字段，都会被重新创建并赋值，对于副本的修改，不会影响到源对象本身。
    深拷贝简单归纳就是对象内部引用的对象均复制。

